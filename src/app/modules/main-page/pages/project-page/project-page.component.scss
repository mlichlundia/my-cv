@use '../../../../../styles/main' as *;

:host {
  ::ng-deep ngx-skeleton-loader .skeleton-loader {
    height: 100vh !important;
  }
}

h5 {
  text-transform: capitalize;
}

.project {
  &__content {
    display: flex;
    flex-direction: column;
    gap: rem(80);
  }

  &__title {
    margin: rem(16) 0 rem(72);
    font-size: font(48);
    font-weight: 500;
    line-height: 120%;
    color: color(black-900);

    @media screen and (min-width: get-breakpoint(s)) {
      font-size: font(64);
    }
  }

  &__video {
    position: relative;
    width: 100%;
    height: rem(200);
    border: rem(1) solid color(gray-400);
    border-radius: rem(16);
    -webkit-border-radius: rem(16);
    -moz-border-radius: rem(16);
    overflow: hidden;

    @media screen and (min-width: get-breakpoint(m)) {
      height: rem(300);
    }

    @media screen and (min-width: get-breakpoint(l)) {
      height: rem(450);
    }

    @media screen and (min-width: get-breakpoint(xxl)) {
      height: rem(600);
    }

    video, .skeleton-container {
      position: absolute;
      width: 100%;
      transform: translate(0, rem(-2));
      border-radius: rem(16);
      -webkit-border-radius: rem(16);
      -moz-border-radius: rem(16);
    }

    video {
      transform: translate(0, rem(-2));
    }

  }

  &__text-block {
    width: 100%;
    display: grid;
    grid-template-columns: 1fr 5fr;
    gap: rem(24);
    font-size: font(14);
    line-height: 180%;
    color: color(gray-700);

    @media screen and (min-width: get-breakpoint(m)) {
      font-size: font(18);
    }

    @media screen and (min-width: get-breakpoint(l)) {
      font-size: font(20);
    }

    @media screen and (min-width: get-breakpoint(xxl)) {
      width: rem(970);
    }

    h5 {
      font-size: font(14);
      font-weight: 500;
      line-height: 140%;
      transform: translate(0, rem(6));
      color: color(gray-900);

      @media screen and (min-width: get-breakpoint(m)) {
        font-size: font(16);
      }
    }

    > div {
      display: flex;
      flex-direction: column;
      gap: rem(12);
    }
  }

  &__screens {
    display: flex;
    flex-direction: column;
    gap: rem(12);

    @media screen and (min-width: get-breakpoint(l)) {
      flex-direction: unset;
    }

    .screen__container, picture, .skeleton-container {
      width: 100%;
      height: rem(250);
      display: block;

      @media screen and (min-width: get-breakpoint(l)) {
        height: rem(200);
      }

      @media screen and (min-width: get-breakpoint(xxl)) {
        height: rem(300);
      }
    }

    .screen__container {
       position: relative;
       overflow: hidden;
      border-radius: rem(16);

       @media screen and (min-width: get-breakpoint(l)) {
         width: calc((100% - #{rem(12 * 2)}) / 3);
       }
     }

    picture, .skeleton-container {
      position: absolute;
    }

    img {
      object-fit: cover;
      object-position: top;
    }
  }

  &__tags {
    margin-top: rem(32);
    display: flex;
    align-items: baseline;
    flex-wrap: wrap;
    gap: rem(8);

    > :nth-child(n) {
      --skill-font-size: #{font(16)}
    }
  }
}